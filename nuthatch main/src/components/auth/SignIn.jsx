import { signInWithEmailAndPassword} from "firebase/auth"; 
import React, { useState } from 'react';
import { auth } from "../../firebase";
import email_icon from './Assets/email.png';
import password_icon from './Assets/password.png';


// --------------------------------------------signIn with google--------------------------------------------
//https://firebase.google.com/docs/auth/web/google-signin
// This snippet file was generated by processing the source file:
// ./auth-next/google-signin.js
//
// To update the snippets in this file, edit the source and then run
// 'npm run snippets'.

// [START auth_google_signin_popup_modular]
import { getAuth, signInWithPopup, GoogleAuthProvider } from "firebase/auth";

const auth = getAuth();
signInWithPopup(auth, provider)
  .then((result) => {
    // This gives you a Google Access Token. You can use it to access the Google API.
    const credential = GoogleAuthProvider.credentialFromResult(result);
    const token = credential.accessToken;
    // The signed-in user info.
    const user = result.user;
    // IdP data available using getAdditionalUserInfo(result)
    // ...
  }).catch((error) => {
    // Handle Errors here.
    const errorCode = error.code;
    const errorMessage = error.message;
    // The email of the user's account used.
    const email = error.customData.email;
    // The AuthCredential type that was used.
    const credential = GoogleAuthProvider.credentialFromError(error);
    // ...
  });
// [END auth_google_signin_popup_modular]

// --------------------------------------------signOut with Firebase Auth--------------------------------------------
//This needs to go uptop
import { getAuth, signOut } from "firebase/auth";

const auth = getAuth();
signOut(auth).then(() => {
  // Sign-out successful.
}).catch((error) => {
  // An error happened.
});

// --------------------------------------------signIn with email and password--------------------------------------------
function SignIn(){
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    

    const signIn = (e) => {
        e.preventDefault();
        signInWithEmailAndPassword(auth,email, password)
        .then((userCredential) => {
            console.log(userCredential);
            alert('Sign-in successful');
        })
        
        .catch((error) => {
            console.log(error);
            console.error('Sign-in error:', error.message);
            alert(`Sign-in error: ${error.message}`);
        });
    }
    return (
        <div className='sign_container'>
            <form onSubmit={signIn}>
                <div className='sign_header'>
                    <div className='sign_text'>Log In</div>
                    <div className='sign_underline'></div>
                </div>
                <div className='sign_inputs'>
                    <div className="sign_input">
                        <img src={email_icon} alt = ""/>
                        <input type="email" placeholder="Email"
                        onChange={(e) => setEmail(e.target.value)}/>
                    </div>  
                    <div className="sign_input">
                        <img src={password_icon} alt = ""/>
                        <input type="password" placeholder="Password"
                        onChange={(e) => setPassword(e.target.value)}/>
                    </div> 
                </div>   
                <div className='sign_forgot-password'>Lost Password? <span>Click here</span></div>
                <div className='sign_submit-container'>
                    <button type="submit" className="sign_submit">Log In</button>
                </div> 
                
            </form>
        </div>
    );
};

export default SignIn;